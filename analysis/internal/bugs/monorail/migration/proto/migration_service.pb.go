// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: go.chromium.org/luci/analysis/internal/bugs/monorail/migration/proto/migration_service.proto

package migrationpb

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request used to migrate a project's rules from monorail to buganizer.
type MigrateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The LUCI Project to migrate.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The maximum number of rules to process in one request. This allows
	// migration to be validated on a small number of rules before migrating all.
	// If unset, no rules are migrated.
	MaxRules int64 `protobuf:"varint,2,opt,name=max_rules,json=maxRules,proto3" json:"max_rules,omitempty"`
}

func (x *MigrateProjectRequest) Reset() {
	*x = MigrateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateProjectRequest) ProtoMessage() {}

func (x *MigrateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateProjectRequest.ProtoReflect.Descriptor instead.
func (*MigrateProjectRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescGZIP(), []int{0}
}

func (x *MigrateProjectRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *MigrateProjectRequest) GetMaxRules() int64 {
	if x != nil {
		return x.MaxRules
	}
	return 0
}

// Response of creating a sample issue.
type MigrateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of rules which migration was attempted due to nearing request timeout.
	RulesNotStarted int64 `protobuf:"varint,1,opt,name=rules_not_started,json=rulesNotStarted,proto3" json:"rules_not_started,omitempty"`
	// The results of rules for which a migration was attempted.
	RuleResults []*MigrateProjectResponse_RuleResult `protobuf:"bytes,2,rep,name=rule_results,json=ruleResults,proto3" json:"rule_results,omitempty"`
}

func (x *MigrateProjectResponse) Reset() {
	*x = MigrateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateProjectResponse) ProtoMessage() {}

func (x *MigrateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateProjectResponse.ProtoReflect.Descriptor instead.
func (*MigrateProjectResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescGZIP(), []int{1}
}

func (x *MigrateProjectResponse) GetRulesNotStarted() int64 {
	if x != nil {
		return x.RulesNotStarted
	}
	return 0
}

func (x *MigrateProjectResponse) GetRuleResults() []*MigrateProjectResponse_RuleResult {
	if x != nil {
		return x.RuleResults
	}
	return nil
}

type MigrateProjectResponse_RuleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the rule to be migrated.
	RuleId string `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	// The identifier of the monorail bug.
	MonorailBugId string `protobuf:"bytes,2,opt,name=monorail_bug_id,json=monorailBugId,proto3" json:"monorail_bug_id,omitempty"`
	// The identifier of the buganizer bug it was to be migrated to.
	BuganizerBugId string `protobuf:"bytes,3,opt,name=buganizer_bug_id,json=buganizerBugId,proto3" json:"buganizer_bug_id,omitempty"`
	// The error (if any) migrating the rule.
	Error string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MigrateProjectResponse_RuleResult) Reset() {
	*x = MigrateProjectResponse_RuleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateProjectResponse_RuleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateProjectResponse_RuleResult) ProtoMessage() {}

func (x *MigrateProjectResponse_RuleResult) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateProjectResponse_RuleResult.ProtoReflect.Descriptor instead.
func (*MigrateProjectResponse_RuleResult) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MigrateProjectResponse_RuleResult) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *MigrateProjectResponse_RuleResult) GetMonorailBugId() string {
	if x != nil {
		return x.MonorailBugId
	}
	return ""
}

func (x *MigrateProjectResponse_RuleResult) GetBuganizerBugId() string {
	if x != nil {
		return x.BuganizerBugId
	}
	return ""
}

func (x *MigrateProjectResponse_RuleResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDesc = []byte{
	0x0a, 0x5c, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x62, 0x75, 0x67, 0x73, 0x2f, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x75, 0x67, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e,
	0x0a, 0x15, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xca,
	0x02, 0x0a, 0x16, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x74, 0x0a, 0x0c, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x75, 0x67, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b,
	0x72, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x8d, 0x01, 0x0a, 0x0a,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x5f,
	0x62, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x42, 0x75, 0x67, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x62,
	0x75, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72,
	0x42, 0x75, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xb7, 0x01, 0x0a, 0x11,
	0x4d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0xa1, 0x01, 0x0a, 0x0e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x45, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x75,
	0x67, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x6d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x62, 0x75, 0x67, 0x73, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x52, 0x5a, 0x50, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x62, 0x75, 0x67, 0x73, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2f, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescData = file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDesc
)

func file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescData)
	})
	return file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_goTypes = []any{
	(*MigrateProjectRequest)(nil),             // 0: luci.analysis.internal.bugs.monorail.migration.MigrateProjectRequest
	(*MigrateProjectResponse)(nil),            // 1: luci.analysis.internal.bugs.monorail.migration.MigrateProjectResponse
	(*MigrateProjectResponse_RuleResult)(nil), // 2: luci.analysis.internal.bugs.monorail.migration.MigrateProjectResponse.RuleResult
}
var file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_depIdxs = []int32{
	2, // 0: luci.analysis.internal.bugs.monorail.migration.MigrateProjectResponse.rule_results:type_name -> luci.analysis.internal.bugs.monorail.migration.MigrateProjectResponse.RuleResult
	0, // 1: luci.analysis.internal.bugs.monorail.migration.MonorailMigration.MigrateProject:input_type -> luci.analysis.internal.bugs.monorail.migration.MigrateProjectRequest
	1, // 2: luci.analysis.internal.bugs.monorail.migration.MonorailMigration.MigrateProject:output_type -> luci.analysis.internal.bugs.monorail.migration.MigrateProjectResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() {
	file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_init()
}
func file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_init() {
	if File_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MigrateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MigrateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MigrateProjectResponse_RuleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto = out.File
	file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_rawDesc = nil
	file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_internal_bugs_monorail_migration_proto_migration_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MonorailMigrationClient is the client API for MonorailMigration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonorailMigrationClient interface {
	// MigrateProject migrates a project's failure association rules from
	// using monorail bugs to using buganizer bugs. The buganizer bug
	// corresponding to a monorail bug is as returned by monorail.
	MigrateProject(ctx context.Context, in *MigrateProjectRequest, opts ...grpc.CallOption) (*MigrateProjectResponse, error)
}
type monorailMigrationPRPCClient struct {
	client *prpc.Client
}

func NewMonorailMigrationPRPCClient(client *prpc.Client) MonorailMigrationClient {
	return &monorailMigrationPRPCClient{client}
}

func (c *monorailMigrationPRPCClient) MigrateProject(ctx context.Context, in *MigrateProjectRequest, opts ...grpc.CallOption) (*MigrateProjectResponse, error) {
	out := new(MigrateProjectResponse)
	err := c.client.Call(ctx, "luci.analysis.internal.bugs.monorail.migration.MonorailMigration", "MigrateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type monorailMigrationClient struct {
	cc grpc.ClientConnInterface
}

func NewMonorailMigrationClient(cc grpc.ClientConnInterface) MonorailMigrationClient {
	return &monorailMigrationClient{cc}
}

func (c *monorailMigrationClient) MigrateProject(ctx context.Context, in *MigrateProjectRequest, opts ...grpc.CallOption) (*MigrateProjectResponse, error) {
	out := new(MigrateProjectResponse)
	err := c.cc.Invoke(ctx, "/luci.analysis.internal.bugs.monorail.migration.MonorailMigration/MigrateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonorailMigrationServer is the server API for MonorailMigration service.
type MonorailMigrationServer interface {
	// MigrateProject migrates a project's failure association rules from
	// using monorail bugs to using buganizer bugs. The buganizer bug
	// corresponding to a monorail bug is as returned by monorail.
	MigrateProject(context.Context, *MigrateProjectRequest) (*MigrateProjectResponse, error)
}

// UnimplementedMonorailMigrationServer can be embedded to have forward compatible implementations.
type UnimplementedMonorailMigrationServer struct {
}

func (*UnimplementedMonorailMigrationServer) MigrateProject(context.Context, *MigrateProjectRequest) (*MigrateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrateProject not implemented")
}

func RegisterMonorailMigrationServer(s prpc.Registrar, srv MonorailMigrationServer) {
	s.RegisterService(&_MonorailMigration_serviceDesc, srv)
}

func _MonorailMigration_MigrateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonorailMigrationServer).MigrateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.analysis.internal.bugs.monorail.migration.MonorailMigration/MigrateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonorailMigrationServer).MigrateProject(ctx, req.(*MigrateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonorailMigration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.analysis.internal.bugs.monorail.migration.MonorailMigration",
	HandlerType: (*MonorailMigrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MigrateProject",
			Handler:    _MonorailMigration_MigrateProject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/analysis/internal/bugs/monorail/migration/proto/migration_service.proto",
}
