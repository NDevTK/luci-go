// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: go.chromium.org/luci/analysis/proto/v1/changepoints.proto

package analysispb

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryChangepointGroupSummariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The LUCI project. Mandatory field.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// A filter to be applied to each changepoint in the groups.
	// If all changepoints in a group are filtered out, this group will not be returned.
	Predicate *ChangepointPredicate `protobuf:"bytes,2,opt,name=predicate,proto3" json:"predicate,omitempty"`
}

func (x *QueryChangepointGroupSummariesRequest) Reset() {
	*x = QueryChangepointGroupSummariesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryChangepointGroupSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointGroupSummariesRequest) ProtoMessage() {}

func (x *QueryChangepointGroupSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointGroupSummariesRequest.ProtoReflect.Descriptor instead.
func (*QueryChangepointGroupSummariesRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{0}
}

func (x *QueryChangepointGroupSummariesRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *QueryChangepointGroupSummariesRequest) GetPredicate() *ChangepointPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

// Represent a function Changepoint -> bool
type ChangepointPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The test id of this changepoint matches this prefix.
	TestIdPrefix string `protobuf:"bytes,1,opt,name=test_id_prefix,json=testIdPrefix,proto3" json:"test_id_prefix,omitempty"`
	// Specify a range. The unexpected verdict rate change on this changepoint needs to fall into this range.
	// Unexpected verdict rate change is calculated by (unexpected verdict rate after changepoint - unexpected verdict rate before changepoint). Negative number means unexpected verdict rate decreases, positive number means increases.
	// eg. {lower_bound:0.1, upper_bound:0.9} means keep changepoint which has a unexpected verdict rate increase >= 10% and <= 90%.
	UnexpectedVerdictRateChangeRange *NumericRange `protobuf:"bytes,2,opt,name=unexpected_verdict_rate_change_range,json=unexpectedVerdictRateChangeRange,proto3" json:"unexpected_verdict_rate_change_range,omitempty"`
}

func (x *ChangepointPredicate) Reset() {
	*x = ChangepointPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangepointPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointPredicate) ProtoMessage() {}

func (x *ChangepointPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointPredicate.ProtoReflect.Descriptor instead.
func (*ChangepointPredicate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{1}
}

func (x *ChangepointPredicate) GetTestIdPrefix() string {
	if x != nil {
		return x.TestIdPrefix
	}
	return ""
}

func (x *ChangepointPredicate) GetUnexpectedVerdictRateChangeRange() *NumericRange {
	if x != nil {
		return x.UnexpectedVerdictRateChangeRange
	}
	return nil
}

type QueryChangepointGroupSummariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of changepoint group summaries.
	GroupSummaries []*ChangepointGroupSummary `protobuf:"bytes,1,rep,name=group_summaries,json=groupSummaries,proto3" json:"group_summaries,omitempty"`
}

func (x *QueryChangepointGroupSummariesResponse) Reset() {
	*x = QueryChangepointGroupSummariesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryChangepointGroupSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointGroupSummariesResponse) ProtoMessage() {}

func (x *QueryChangepointGroupSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointGroupSummariesResponse.ProtoReflect.Descriptor instead.
func (*QueryChangepointGroupSummariesResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{2}
}

func (x *QueryChangepointGroupSummariesResponse) GetGroupSummaries() []*ChangepointGroupSummary {
	if x != nil {
		return x.GroupSummaries
	}
	return nil
}

// Represent the summary of a changepoint group.
type ChangepointGroupSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The canonical changepoint in the group. This is the changepoint with minimum (test_id, variant_hash, ref_hash, nominal_start_position) combination.
	CanonicalChangepoint *Changepoint `protobuf:"bytes,1,opt,name=canonical_changepoint,json=canonicalChangepoint,proto3" json:"canonical_changepoint,omitempty"`
	// Statistics of this group.
	Statistics *ChangepointGroupStatistics `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *ChangepointGroupSummary) Reset() {
	*x = ChangepointGroupSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangepointGroupSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupSummary) ProtoMessage() {}

func (x *ChangepointGroupSummary) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupSummary.ProtoReflect.Descriptor instead.
func (*ChangepointGroupSummary) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{3}
}

func (x *ChangepointGroupSummary) GetCanonicalChangepoint() *Changepoint {
	if x != nil {
		return x.CanonicalChangepoint
	}
	return nil
}

func (x *ChangepointGroupSummary) GetStatistics() *ChangepointGroupStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type ChangepointGroupStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of test variant branches in this group.
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// Unexpected verdict rate before the changepoint.
	// The per test variant branch, unexpected verdict rate is calculated as (count of unexpected verdict/count of all verdicts).
	UnexpectedVerdictRateBefore *ChangepointGroupStatistics_RateDistribution `protobuf:"bytes,2,opt,name=unexpected_verdict_rate_before,json=unexpectedVerdictRateBefore,proto3" json:"unexpected_verdict_rate_before,omitempty"`
	// Unexpected verdict rate after the changepoint.
	UnexpectedVerdictRateAfter *ChangepointGroupStatistics_RateDistribution `protobuf:"bytes,3,opt,name=unexpected_verdict_rate_after,json=unexpectedVerdictRateAfter,proto3" json:"unexpected_verdict_rate_after,omitempty"`
	// The current unexpected verdict rate.
	UnexpectedVerdictRateCurrent *ChangepointGroupStatistics_RateDistribution `protobuf:"bytes,4,opt,name=unexpected_verdict_rate_current,json=unexpectedVerdictRateCurrent,proto3" json:"unexpected_verdict_rate_current,omitempty"`
	// The amount of change in unexpected verdict rate before and after the changepoint.
	UnexpectedVerdictRateChange *ChangepointGroupStatistics_RateChangeBuckets `protobuf:"bytes,5,opt,name=unexpected_verdict_rate_change,json=unexpectedVerdictRateChange,proto3" json:"unexpected_verdict_rate_change,omitempty"`
}

func (x *ChangepointGroupStatistics) Reset() {
	*x = ChangepointGroupStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangepointGroupStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics) ProtoMessage() {}

func (x *ChangepointGroupStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{4}
}

func (x *ChangepointGroupStatistics) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateBefore() *ChangepointGroupStatistics_RateDistribution {
	if x != nil {
		return x.UnexpectedVerdictRateBefore
	}
	return nil
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateAfter() *ChangepointGroupStatistics_RateDistribution {
	if x != nil {
		return x.UnexpectedVerdictRateAfter
	}
	return nil
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateCurrent() *ChangepointGroupStatistics_RateDistribution {
	if x != nil {
		return x.UnexpectedVerdictRateCurrent
	}
	return nil
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateChange() *ChangepointGroupStatistics_RateChangeBuckets {
	if x != nil {
		return x.UnexpectedVerdictRateChange
	}
	return nil
}

type QueryChangepointsInGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The LUCI project. Mandatory field.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Identify a group with this changepoint. Mandatory field.
	GroupKey *QueryChangepointsInGroupRequest_ChangepointIdentifier `protobuf:"bytes,2,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	// A filter to be applied to each changepoint.
	Predicate *ChangepointPredicate `protobuf:"bytes,3,opt,name=predicate,proto3" json:"predicate,omitempty"`
}

func (x *QueryChangepointsInGroupRequest) Reset() {
	*x = QueryChangepointsInGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryChangepointsInGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointsInGroupRequest) ProtoMessage() {}

func (x *QueryChangepointsInGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointsInGroupRequest.ProtoReflect.Descriptor instead.
func (*QueryChangepointsInGroupRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{5}
}

func (x *QueryChangepointsInGroupRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest) GetGroupKey() *QueryChangepointsInGroupRequest_ChangepointIdentifier {
	if x != nil {
		return x.GroupKey
	}
	return nil
}

func (x *QueryChangepointsInGroupRequest) GetPredicate() *ChangepointPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

// TODO: Implement pagination, currently just return at most 1000 changepoints.
type QueryChangepointsInGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of changepoints in a group.
	Changepoints []*Changepoint `protobuf:"bytes,1,rep,name=changepoints,proto3" json:"changepoints,omitempty"`
}

func (x *QueryChangepointsInGroupResponse) Reset() {
	*x = QueryChangepointsInGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryChangepointsInGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointsInGroupResponse) ProtoMessage() {}

func (x *QueryChangepointsInGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointsInGroupResponse.ProtoReflect.Descriptor instead.
func (*QueryChangepointsInGroupResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{6}
}

func (x *QueryChangepointsInGroupResponse) GetChangepoints() []*Changepoint {
	if x != nil {
		return x.Changepoints
	}
	return nil
}

// Represent a changepoint of a test variant branch.
// Next ID: 15.
type Changepoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The LUCI Project. E.g. "chromium".
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The identity of the test.
	TestId string `protobuf:"bytes,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	// Hash of the variant, as 16 lowercase hexadecimal characters.
	// E.g. "96c68dc946ab4068".
	VariantHash string `protobuf:"bytes,3,opt,name=variant_hash,json=variantHash,proto3" json:"variant_hash,omitempty"`
	// key:value pairs to specify the way of running a particular test.
	// e.g. a specific bucket, builder and a test suite.
	Variant *Variant `protobuf:"bytes,14,opt,name=variant,proto3" json:"variant,omitempty"`
	// Hash of the source branch, as 16 lowercase hexadecimal characters.
	RefHash string `protobuf:"bytes,4,opt,name=ref_hash,json=refHash,proto3" json:"ref_hash,omitempty"`
	// The branch in source control.
	Ref *SourceRef `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	// The nominal start hour of this changepoint.
	StartHour *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=start_hour,json=startHour,proto3" json:"start_hour,omitempty"`
	// The lower bound of the starting changepoint position in a 99% two-tailed
	// confidence interval. Inclusive.
	StartPositionLowerBound_99Th int64 `protobuf:"varint,10,opt,name=start_position_lower_bound_99th,json=startPositionLowerBound99th,proto3" json:"start_position_lower_bound_99th,omitempty"`
	// The upper bound of the starting changepoint position in a 99% two-tailed
	// confidence interval. Inclusive.
	StartPositionUpperBound_99Th int64 `protobuf:"varint,11,opt,name=start_position_upper_bound_99th,json=startPositionUpperBound99th,proto3" json:"start_position_upper_bound_99th,omitempty"`
	// The nominal commit position at which the segment starts (inclusive).
	NominalStartPosition int64 `protobuf:"varint,12,opt,name=nominal_start_position,json=nominalStartPosition,proto3" json:"nominal_start_position,omitempty"`
	// The nominal commit position at which the previous segment ends (inclusive).
	PreviousSegmentNominalEndPosition int64 `protobuf:"varint,13,opt,name=previous_segment_nominal_end_position,json=previousSegmentNominalEndPosition,proto3" json:"previous_segment_nominal_end_position,omitempty"`
}

func (x *Changepoint) Reset() {
	*x = Changepoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Changepoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changepoint) ProtoMessage() {}

func (x *Changepoint) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changepoint.ProtoReflect.Descriptor instead.
func (*Changepoint) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{7}
}

func (x *Changepoint) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Changepoint) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *Changepoint) GetVariantHash() string {
	if x != nil {
		return x.VariantHash
	}
	return ""
}

func (x *Changepoint) GetVariant() *Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

func (x *Changepoint) GetRefHash() string {
	if x != nil {
		return x.RefHash
	}
	return ""
}

func (x *Changepoint) GetRef() *SourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *Changepoint) GetStartHour() *timestamppb.Timestamp {
	if x != nil {
		return x.StartHour
	}
	return nil
}

func (x *Changepoint) GetStartPositionLowerBound_99Th() int64 {
	if x != nil {
		return x.StartPositionLowerBound_99Th
	}
	return 0
}

func (x *Changepoint) GetStartPositionUpperBound_99Th() int64 {
	if x != nil {
		return x.StartPositionUpperBound_99Th
	}
	return 0
}

func (x *Changepoint) GetNominalStartPosition() int64 {
	if x != nil {
		return x.NominalStartPosition
	}
	return 0
}

func (x *Changepoint) GetPreviousSegmentNominalEndPosition() int64 {
	if x != nil {
		return x.PreviousSegmentNominalEndPosition
	}
	return 0
}

type ChangepointGroupStatistics_RateDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Average unexpected verdict rate of all test variant branches in the group. This is a value between 0.0 and 1.0.
	// Consequently, this is an ‘average of averages’.
	Average float32 `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"`
	// Count the number of changepoint that fall into each rate bucket.
	Buckets *ChangepointGroupStatistics_RateDistribution_RateBuckets `protobuf:"bytes,2,opt,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *ChangepointGroupStatistics_RateDistribution) Reset() {
	*x = ChangepointGroupStatistics_RateDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangepointGroupStatistics_RateDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics_RateDistribution) ProtoMessage() {}

func (x *ChangepointGroupStatistics_RateDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics_RateDistribution.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics_RateDistribution) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ChangepointGroupStatistics_RateDistribution) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateDistribution) GetBuckets() *ChangepointGroupStatistics_RateDistribution_RateBuckets {
	if x != nil {
		return x.Buckets
	}
	return nil
}

// Unexpected verdict rate change is calculated by (unexpected verdict rate after changepoint - unexpected verdict rate before changepoint).
// TODO: we need to add buckets for unexpected verdict rate decrease when we support grouping fixes. Unexpected verdict rate decrease will be represented as negative number.
type ChangepointGroupStatistics_RateChangeBuckets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counts the number of test variant branches which saw their unexpected verdict rate increase by between 0% (inclusive) and 20% (exclusive).
	CountIncreased_0To_20Percent int32 `protobuf:"varint,1,opt,name=count_increased_0_to_20_percent,json=countIncreased0To20Percent,proto3" json:"count_increased_0_to_20_percent,omitempty"`
	// Counts the number of test variant branches which saw their unexpected verdict rate increase by between 20% (inclusive) and 50% (exclusive).
	CountIncreased_20To_50Percent int32 `protobuf:"varint,2,opt,name=count_increased_20_to_50_percent,json=countIncreased20To50Percent,proto3" json:"count_increased_20_to_50_percent,omitempty"`
	// Counts the number of test variant branches which saw their unexpected verdict rate increase by between 50% (inclusive) or more.
	CountIncreased_50To_100Percent int32 `protobuf:"varint,3,opt,name=count_increased_50_to_100_percent,json=countIncreased50To100Percent,proto3" json:"count_increased_50_to_100_percent,omitempty"`
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) Reset() {
	*x = ChangepointGroupStatistics_RateChangeBuckets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics_RateChangeBuckets) ProtoMessage() {}

func (x *ChangepointGroupStatistics_RateChangeBuckets) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics_RateChangeBuckets.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics_RateChangeBuckets) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) GetCountIncreased_0To_20Percent() int32 {
	if x != nil {
		return x.CountIncreased_0To_20Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) GetCountIncreased_20To_50Percent() int32 {
	if x != nil {
		return x.CountIncreased_20To_50Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) GetCountIncreased_50To_100Percent() int32 {
	if x != nil {
		return x.CountIncreased_50To_100Percent
	}
	return 0
}

type ChangepointGroupStatistics_RateDistribution_RateBuckets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counts the number of test variant branches with a unexpected verdict rate less than 5% (exclusive).
	CountLess_5Percent int32 `protobuf:"varint,1,opt,name=count_less_5_percent,json=countLess5Percent,proto3" json:"count_less_5_percent,omitempty"`
	// Counts the number of test variant branches with a unexpected verdict rate greater than or equal to 5%, but less than 95%.
	CountAbove_5LessThan_95Percent int32 `protobuf:"varint,2,opt,name=count_above_5_less_than_95_percent,json=countAbove5LessThan95Percent,proto3" json:"count_above_5_less_than_95_percent,omitempty"`
	// Counts the number of test variant branches with a unexpected verdict rate equal to or greater than 95%.
	CountAbove_95Percent int32 `protobuf:"varint,3,opt,name=count_above_95_percent,json=countAbove95Percent,proto3" json:"count_above_95_percent,omitempty"`
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) Reset() {
	*x = ChangepointGroupStatistics_RateDistribution_RateBuckets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics_RateDistribution_RateBuckets) ProtoMessage() {}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics_RateDistribution_RateBuckets.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics_RateDistribution_RateBuckets) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) GetCountLess_5Percent() int32 {
	if x != nil {
		return x.CountLess_5Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) GetCountAbove_5LessThan_95Percent() int32 {
	if x != nil {
		return x.CountAbove_5LessThan_95Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) GetCountAbove_95Percent() int32 {
	if x != nil {
		return x.CountAbove_95Percent
	}
	return 0
}

// We consider two changepoints matches if
//   - their test_id, variant_hash, ref_hash are exactly the same,
//     AND
//   - nominal_start_position is within the other changepoint's 99% confidence interval (inclusive).
//
// Most of the time there should be only one matching changepoint.
// However, in rare cases adjacent segments can have an overlapping 99% confidence interval.
// It makes it possible that more than one changepoint matches. In this case, we select the one with the closest nominal start position.
type QueryChangepointsInGroupRequest_ChangepointIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestId               string `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	VariantHash          string `protobuf:"bytes,2,opt,name=variant_hash,json=variantHash,proto3" json:"variant_hash,omitempty"`
	RefHash              string `protobuf:"bytes,3,opt,name=ref_hash,json=refHash,proto3" json:"ref_hash,omitempty"`
	NominalStartPosition int64  `protobuf:"varint,4,opt,name=nominal_start_position,json=nominalStartPosition,proto3" json:"nominal_start_position,omitempty"`
	// The nominal start hour of this changepoint in UTC.
	// This is used to locate a week in UTC (Saturday to Sunday) to generate changepoint groups.
	StartHour *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_hour,json=startHour,proto3" json:"start_hour,omitempty"`
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) Reset() {
	*x = QueryChangepointsInGroupRequest_ChangepointIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointsInGroupRequest_ChangepointIdentifier) ProtoMessage() {}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointsInGroupRequest_ChangepointIdentifier.ProtoReflect.Descriptor instead.
func (*QueryChangepointsInGroupRequest_ChangepointIdentifier) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{5, 0}
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetVariantHash() string {
	if x != nil {
		return x.VariantHash
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetRefHash() string {
	if x != nil {
		return x.RefHash
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetNominalStartPosition() int64 {
	if x != nil {
		return x.NominalStartPosition
	}
	return 0
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetStartHour() *timestamppb.Timestamp {
	if x != nil {
		return x.StartHour
	}
	return nil
}

var File_go_chromium_org_luci_analysis_proto_v1_changepoints_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc = []byte{
	0x0a, 0x39, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34,
	0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x25, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x44, 0x0a,
	0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x6e, 0x0a, 0x24, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x20, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x64,
	0x69, 0x63, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x7c, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x22, 0xbb, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x52, 0x0a, 0x15,
	0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x14, 0x63, 0x61, 0x6e, 0x6f,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x4c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x86,
	0x09, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x1e, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6c,
	0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1b, 0x75, 0x6e, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x75, 0x6e, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x52,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x1a, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x64, 0x69,
	0x63, 0x74, 0x52, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x84, 0x01, 0x0a, 0x1f,
	0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x64, 0x69,
	0x63, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1c, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x1e, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x1b, 0x75, 0x6e, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0xd1, 0x02, 0x0a, 0x10, 0x52, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x63, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x1a, 0xbd, 0x01, 0x0a,
	0x0b, 0x52, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x14,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x35, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x35, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a,
	0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x5f, 0x35, 0x5f, 0x6c,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x39, 0x35, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x62, 0x6f, 0x76, 0x65, 0x35, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x39, 0x35,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x5f, 0x39, 0x35, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x62,
	0x6f, 0x76, 0x65, 0x39, 0x35, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x1a, 0xe8, 0x01, 0x0a,
	0x11, 0x52, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x43, 0x0a, 0x1f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x30, 0x5f, 0x74, 0x6f, 0x5f, 0x32, 0x30, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x30, 0x54, 0x6f, 0x32, 0x30,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x32, 0x30, 0x5f, 0x74, 0x6f,
	0x5f, 0x35, 0x30, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x1b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x64, 0x32, 0x30, 0x54, 0x6f, 0x35, 0x30, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x47,
	0x0a, 0x21, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x35, 0x30, 0x5f, 0x74, 0x6f, 0x5f, 0x31, 0x30, 0x30, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x64, 0x35, 0x30, 0x54, 0x6f, 0x31, 0x30, 0x30,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xc9, 0x03, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x64, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x1a, 0xdf, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48,
	0x6f, 0x75, 0x72, 0x22, 0x65, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xb1, 0x04, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x33, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x44, 0x0a, 0x1f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x39, 0x39, 0x74, 0x68, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x1b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x39, 0x39, 0x74, 0x68,
	0x12, 0x44, 0x0a, 0x1f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x39,
	0x39, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x39, 0x39, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x25,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x21, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xac,
	0x02, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x95, 0x01, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x37, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x31, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a,
	0x31, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescData = file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc
)

func file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescData)
	})
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_goTypes = []any{
	(*QueryChangepointGroupSummariesRequest)(nil),                   // 0: luci.analysis.v1.QueryChangepointGroupSummariesRequest
	(*ChangepointPredicate)(nil),                                    // 1: luci.analysis.v1.ChangepointPredicate
	(*QueryChangepointGroupSummariesResponse)(nil),                  // 2: luci.analysis.v1.QueryChangepointGroupSummariesResponse
	(*ChangepointGroupSummary)(nil),                                 // 3: luci.analysis.v1.ChangepointGroupSummary
	(*ChangepointGroupStatistics)(nil),                              // 4: luci.analysis.v1.ChangepointGroupStatistics
	(*QueryChangepointsInGroupRequest)(nil),                         // 5: luci.analysis.v1.QueryChangepointsInGroupRequest
	(*QueryChangepointsInGroupResponse)(nil),                        // 6: luci.analysis.v1.QueryChangepointsInGroupResponse
	(*Changepoint)(nil),                                             // 7: luci.analysis.v1.Changepoint
	(*ChangepointGroupStatistics_RateDistribution)(nil),             // 8: luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	(*ChangepointGroupStatistics_RateChangeBuckets)(nil),            // 9: luci.analysis.v1.ChangepointGroupStatistics.RateChangeBuckets
	(*ChangepointGroupStatistics_RateDistribution_RateBuckets)(nil), // 10: luci.analysis.v1.ChangepointGroupStatistics.RateDistribution.RateBuckets
	(*QueryChangepointsInGroupRequest_ChangepointIdentifier)(nil),   // 11: luci.analysis.v1.QueryChangepointsInGroupRequest.ChangepointIdentifier
	(*NumericRange)(nil),                                            // 12: luci.analysis.v1.NumericRange
	(*Variant)(nil),                                                 // 13: luci.analysis.v1.Variant
	(*SourceRef)(nil),                                               // 14: luci.analysis.v1.SourceRef
	(*timestamppb.Timestamp)(nil),                                   // 15: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_depIdxs = []int32{
	1,  // 0: luci.analysis.v1.QueryChangepointGroupSummariesRequest.predicate:type_name -> luci.analysis.v1.ChangepointPredicate
	12, // 1: luci.analysis.v1.ChangepointPredicate.unexpected_verdict_rate_change_range:type_name -> luci.analysis.v1.NumericRange
	3,  // 2: luci.analysis.v1.QueryChangepointGroupSummariesResponse.group_summaries:type_name -> luci.analysis.v1.ChangepointGroupSummary
	7,  // 3: luci.analysis.v1.ChangepointGroupSummary.canonical_changepoint:type_name -> luci.analysis.v1.Changepoint
	4,  // 4: luci.analysis.v1.ChangepointGroupSummary.statistics:type_name -> luci.analysis.v1.ChangepointGroupStatistics
	8,  // 5: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_before:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	8,  // 6: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_after:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	8,  // 7: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_current:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	9,  // 8: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_change:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateChangeBuckets
	11, // 9: luci.analysis.v1.QueryChangepointsInGroupRequest.group_key:type_name -> luci.analysis.v1.QueryChangepointsInGroupRequest.ChangepointIdentifier
	1,  // 10: luci.analysis.v1.QueryChangepointsInGroupRequest.predicate:type_name -> luci.analysis.v1.ChangepointPredicate
	7,  // 11: luci.analysis.v1.QueryChangepointsInGroupResponse.changepoints:type_name -> luci.analysis.v1.Changepoint
	13, // 12: luci.analysis.v1.Changepoint.variant:type_name -> luci.analysis.v1.Variant
	14, // 13: luci.analysis.v1.Changepoint.ref:type_name -> luci.analysis.v1.SourceRef
	15, // 14: luci.analysis.v1.Changepoint.start_hour:type_name -> google.protobuf.Timestamp
	10, // 15: luci.analysis.v1.ChangepointGroupStatistics.RateDistribution.buckets:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution.RateBuckets
	15, // 16: luci.analysis.v1.QueryChangepointsInGroupRequest.ChangepointIdentifier.start_hour:type_name -> google.protobuf.Timestamp
	0,  // 17: luci.analysis.v1.Changepoints.QueryChangepointGroupSummaries:input_type -> luci.analysis.v1.QueryChangepointGroupSummariesRequest
	5,  // 18: luci.analysis.v1.Changepoints.QueryChangepointsInGroup:input_type -> luci.analysis.v1.QueryChangepointsInGroupRequest
	2,  // 19: luci.analysis.v1.Changepoints.QueryChangepointGroupSummaries:output_type -> luci.analysis.v1.QueryChangepointGroupSummariesResponse
	6,  // 20: luci.analysis.v1.Changepoints.QueryChangepointsInGroup:output_type -> luci.analysis.v1.QueryChangepointsInGroupResponse
	19, // [19:21] is the sub-list for method output_type
	17, // [17:19] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_init() }
func file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_v1_changepoints_proto != nil {
		return
	}
	file_go_chromium_org_luci_analysis_proto_v1_sources_proto_init()
	file_go_chromium_org_luci_analysis_proto_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*QueryChangepointGroupSummariesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ChangepointPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*QueryChangepointGroupSummariesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ChangepointGroupSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ChangepointGroupStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*QueryChangepointsInGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*QueryChangepointsInGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Changepoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ChangepointGroupStatistics_RateDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ChangepointGroupStatistics_RateChangeBuckets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ChangepointGroupStatistics_RateDistribution_RateBuckets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*QueryChangepointsInGroupRequest_ChangepointIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_v1_changepoints_proto = out.File
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc = nil
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChangepointsClient is the client API for Changepoints service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChangepointsClient interface {
	// Query the changepoint group summaries.
	// Currently this RPC only returns at most 1000 changepoint groups starting at the current week.
	// TODO: Add pagination to this RPC so that more changepoint history can be seen.
	QueryChangepointGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequest, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponse, error)
	// Query the changepoints in a particular group.
	// TODO: Implement pagination, currently just return at most 1000 changepoints.
	QueryChangepointsInGroup(ctx context.Context, in *QueryChangepointsInGroupRequest, opts ...grpc.CallOption) (*QueryChangepointsInGroupResponse, error)
}
type changepointsPRPCClient struct {
	client *prpc.Client
}

func NewChangepointsPRPCClient(client *prpc.Client) ChangepointsClient {
	return &changepointsPRPCClient{client}
}

func (c *changepointsPRPCClient) QueryChangepointGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequest, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponse, error) {
	out := new(QueryChangepointGroupSummariesResponse)
	err := c.client.Call(ctx, "luci.analysis.v1.Changepoints", "QueryChangepointGroupSummaries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changepointsPRPCClient) QueryChangepointsInGroup(ctx context.Context, in *QueryChangepointsInGroupRequest, opts ...grpc.CallOption) (*QueryChangepointsInGroupResponse, error) {
	out := new(QueryChangepointsInGroupResponse)
	err := c.client.Call(ctx, "luci.analysis.v1.Changepoints", "QueryChangepointsInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type changepointsClient struct {
	cc grpc.ClientConnInterface
}

func NewChangepointsClient(cc grpc.ClientConnInterface) ChangepointsClient {
	return &changepointsClient{cc}
}

func (c *changepointsClient) QueryChangepointGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequest, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponse, error) {
	out := new(QueryChangepointGroupSummariesResponse)
	err := c.cc.Invoke(ctx, "/luci.analysis.v1.Changepoints/QueryChangepointGroupSummaries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changepointsClient) QueryChangepointsInGroup(ctx context.Context, in *QueryChangepointsInGroupRequest, opts ...grpc.CallOption) (*QueryChangepointsInGroupResponse, error) {
	out := new(QueryChangepointsInGroupResponse)
	err := c.cc.Invoke(ctx, "/luci.analysis.v1.Changepoints/QueryChangepointsInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChangepointsServer is the server API for Changepoints service.
type ChangepointsServer interface {
	// Query the changepoint group summaries.
	// Currently this RPC only returns at most 1000 changepoint groups starting at the current week.
	// TODO: Add pagination to this RPC so that more changepoint history can be seen.
	QueryChangepointGroupSummaries(context.Context, *QueryChangepointGroupSummariesRequest) (*QueryChangepointGroupSummariesResponse, error)
	// Query the changepoints in a particular group.
	// TODO: Implement pagination, currently just return at most 1000 changepoints.
	QueryChangepointsInGroup(context.Context, *QueryChangepointsInGroupRequest) (*QueryChangepointsInGroupResponse, error)
}

// UnimplementedChangepointsServer can be embedded to have forward compatible implementations.
type UnimplementedChangepointsServer struct {
}

func (*UnimplementedChangepointsServer) QueryChangepointGroupSummaries(context.Context, *QueryChangepointGroupSummariesRequest) (*QueryChangepointGroupSummariesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryChangepointGroupSummaries not implemented")
}
func (*UnimplementedChangepointsServer) QueryChangepointsInGroup(context.Context, *QueryChangepointsInGroupRequest) (*QueryChangepointsInGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryChangepointsInGroup not implemented")
}

func RegisterChangepointsServer(s prpc.Registrar, srv ChangepointsServer) {
	s.RegisterService(&_Changepoints_serviceDesc, srv)
}

func _Changepoints_QueryChangepointGroupSummaries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryChangepointGroupSummariesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangepointsServer).QueryChangepointGroupSummaries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.analysis.v1.Changepoints/QueryChangepointGroupSummaries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangepointsServer).QueryChangepointGroupSummaries(ctx, req.(*QueryChangepointGroupSummariesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Changepoints_QueryChangepointsInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryChangepointsInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangepointsServer).QueryChangepointsInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.analysis.v1.Changepoints/QueryChangepointsInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangepointsServer).QueryChangepointsInGroup(ctx, req.(*QueryChangepointsInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Changepoints_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.analysis.v1.Changepoints",
	HandlerType: (*ChangepointsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryChangepointGroupSummaries",
			Handler:    _Changepoints_QueryChangepointGroupSummaries_Handler,
		},
		{
			MethodName: "QueryChangepointsInGroup",
			Handler:    _Changepoints_QueryChangepointsInGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/analysis/proto/v1/changepoints.proto",
}
